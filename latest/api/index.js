Index.PACKAGES = {"com.flowtick.graphs.json" : [{"name" : "com.flowtick.graphs.json.FromJson", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html", "members_object" : [{"label" : "apply", "tail" : "(json: String)(edgeEncoder: Decoder[E], nodeEncoder: Decoder[N], metaDecoder: Decoder[M]): Either[Error, Graph[M, E, N]]", "member" : "com.flowtick.graphs.json.FromJson.apply", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#apply[M,E,N](json:String)(implicitedgeEncoder:io.circe.Decoder[E],implicitnodeEncoder:io.circe.Decoder[N],implicitmetaDecoder:io.circe.Decoder[M]):Either[io.circe.Error,com.flowtick.graphs.Graph[M,E,N]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$FromJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.json.options", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/json\/package$$options$.html", "members_object" : [{"label" : "unitAsNull", "tail" : ": Encoder[Unit]", "member" : "com.flowtick.graphs.json.options.unitAsNull", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#unitAsNull:io.circe.Encoder[Unit]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$options$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.json.ToJson", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html", "members_object" : [{"label" : "apply", "tail" : "(graph: Graph[M, E, N])(edgeEncoder: Encoder[E], nodeEncoder: Encoder[N], metaEncoder: Encoder[M], nodeId: Identifiable[N, String], edgeId: Identifiable[Edge[E, N], String]): Json", "member" : "com.flowtick.graphs.json.ToJson.apply", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#apply[M,E,N](graph:com.flowtick.graphs.Graph[M,E,N])(implicitedgeEncoder:io.circe.Encoder[E],implicitnodeEncoder:io.circe.Encoder[N],implicitmetaEncoder:io.circe.Encoder[M],implicitnodeId:com.flowtick.graphs.Identifiable[N,String],implicitedgeId:com.flowtick.graphs.Identifiable[com.flowtick.graphs.Edge[E,N],String]):io.circe.Json", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/json\/package$$ToJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.flowtick.graphs" : [{"name" : "com.flowtick.graphs.Edge", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.flowtick.graphs.Edge.toString", "link" : "com\/flowtick\/graphs\/Edge.html#toString():String", "kind" : "def"}, {"member" : "com.flowtick.graphs.Edge#<init>", "error" : "unsupported entity"}, {"label" : "to", "tail" : ": N", "member" : "com.flowtick.graphs.Edge.to", "link" : "com\/flowtick\/graphs\/Edge.html#to:N", "kind" : "val"}, {"label" : "from", "tail" : ": N", "member" : "com.flowtick.graphs.Edge.from", "link" : "com\/flowtick\/graphs\/Edge.html#from:N", "kind" : "val"}, {"label" : "value", "tail" : ": E", "member" : "com.flowtick.graphs.Edge.value", "link" : "com\/flowtick\/graphs\/Edge.html#value:E", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/Edge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Edge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Edge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Edge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Edge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Edge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Edge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Edge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Edge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Edge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Edge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Edge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Edge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Edge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Edge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Edge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Edge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/Edge.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.Graph", "object" : "com\/flowtick\/graphs\/Graph$.html", "members_object" : [{"label" : "fromEdges", "tail" : "(edges: Iterable[Edge[E, N]]): Graph[Unit, E, N]", "member" : "com.flowtick.graphs.Graph.fromEdges", "link" : "com\/flowtick\/graphs\/Graph$.html#fromEdges[E,N](edges:Iterable[com.flowtick.graphs.Edge[E,N]]):com.flowtick.graphs.Graph[Unit,E,N]", "kind" : "def"}, {"label" : "unit", "tail" : "(): Graph[Unit, E, N]", "member" : "com.flowtick.graphs.Graph.unit", "link" : "com\/flowtick\/graphs\/Graph$.html#unit[E,N]:com.flowtick.graphs.Graph[Unit,E,N]", "kind" : "def"}, {"label" : "empty", "tail" : "(meta: M): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.empty", "link" : "com\/flowtick\/graphs\/Graph$.html#empty[M,E,N](meta:M):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "apply", "tail" : "(meta: M, edges: Iterable[Edge[E, N]], nodes: Iterable[N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.apply", "link" : "com\/flowtick\/graphs\/Graph$.html#apply[M,E,N](meta:M,edges:Iterable[com.flowtick.graphs.Edge[E,N]],nodes:Iterable[N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Graph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Graph$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Graph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Graph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Graph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Graph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Graph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Graph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Graph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Graph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Graph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Graph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Graph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Graph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Graph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Graph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/flowtick\/graphs\/Graph.html", "kind" : "trait", "members_trait" : [{"label" : "withEdges", "tail" : "(edges: Iterable[Edge[E, N]]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.withEdges", "link" : "com\/flowtick\/graphs\/Graph.html#withEdges(edges:Iterable[com.flowtick.graphs.Edge[E,N]]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "withNodes", "tail" : "(nodes: Iterable[N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.withNodes", "link" : "com\/flowtick\/graphs\/Graph.html#withNodes(nodes:Iterable[N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "predecessors", "tail" : "(node: N): Iterable[N]", "member" : "com.flowtick.graphs.Graph.predecessors", "link" : "com\/flowtick\/graphs\/Graph.html#predecessors(node:N):Iterable[N]", "kind" : "def"}, {"label" : "successors", "tail" : "(node: N): Iterable[N]", "member" : "com.flowtick.graphs.Graph.successors", "link" : "com\/flowtick\/graphs\/Graph.html#successors(node:N):Iterable[N]", "kind" : "def"}, {"label" : "outgoing", "tail" : "(node: N): Iterable[Edge[E, N]]", "member" : "com.flowtick.graphs.Graph.outgoing", "link" : "com\/flowtick\/graphs\/Graph.html#outgoing(node:N):Iterable[com.flowtick.graphs.Edge[E,N]]", "kind" : "def"}, {"label" : "incoming", "tail" : "(node: N): Iterable[Edge[E, N]]", "member" : "com.flowtick.graphs.Graph.incoming", "link" : "com\/flowtick\/graphs\/Graph.html#incoming(node:N):Iterable[com.flowtick.graphs.Edge[E,N]]", "kind" : "def"}, {"label" : "findNode", "tail" : "(id: N): Option[NodeContext[N, E]]", "member" : "com.flowtick.graphs.Graph.findNode", "link" : "com\/flowtick\/graphs\/Graph.html#findNode(id:N):Option[com.flowtick.graphs.NodeContext[N,E]]", "kind" : "def"}, {"label" : "nodes", "tail" : "(): Iterable[N]", "member" : "com.flowtick.graphs.Graph.nodes", "link" : "com\/flowtick\/graphs\/Graph.html#nodes:Iterable[N]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Graph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Graph.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Graph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withMeta", "tail" : "(meta: MT): Graph[MT, E, N]", "member" : "com.flowtick.graphs.Graph.withMeta", "link" : "com\/flowtick\/graphs\/Graph.html#withMeta[MT](meta:MT):com.flowtick.graphs.Graph[MT,E,N]", "kind" : "abstract def"}, {"label" : "withNode", "tail" : "(node: N): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.withNode", "link" : "com\/flowtick\/graphs\/Graph.html#withNode(node:N):com.flowtick.graphs.Graph[M,E,N]", "kind" : "abstract def"}, {"label" : "+", "tail" : "(edge: Edge[E, N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.+", "link" : "com\/flowtick\/graphs\/Graph.html#+(edge:com.flowtick.graphs.Edge[E,N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "abstract def"}, {"label" : "mapNodes", "tail" : "(f: (N) => B): Graph[M, E, B]", "member" : "com.flowtick.graphs.Graph.mapNodes", "link" : "com\/flowtick\/graphs\/Graph.html#mapNodes[B](f:N=>B):com.flowtick.graphs.Graph[M,E,B]", "kind" : "abstract def"}, {"label" : "edges", "tail" : "(): Set[Edge[E, N]]", "member" : "com.flowtick.graphs.Graph.edges", "link" : "com\/flowtick\/graphs\/Graph.html#edges:scala.collection.Set[com.flowtick.graphs.Edge[E,N]]", "kind" : "abstract def"}, {"label" : "contexts", "tail" : "(): Map[N, NodeContext[N, E]]", "member" : "com.flowtick.graphs.Graph.contexts", "link" : "com\/flowtick\/graphs\/Graph.html#contexts:scala.collection.Map[N,com.flowtick.graphs.NodeContext[N,E]]", "kind" : "abstract def"}, {"label" : "meta", "tail" : "(): M", "member" : "com.flowtick.graphs.Graph.meta", "link" : "com\/flowtick\/graphs\/Graph.html#meta:M", "kind" : "abstract def"}], "shortDescription" : "A representation of a Graph."}, {"name" : "com.flowtick.graphs.GraphInstance", "shortDescription" : "", "members_case class" : [{"label" : "withMeta", "tail" : "(meta: MT): Graph[MT, E, N]", "member" : "com.flowtick.graphs.GraphInstance.withMeta", "link" : "com\/flowtick\/graphs\/GraphInstance.html#withMeta[MT](meta:MT):com.flowtick.graphs.Graph[MT,E,N]", "kind" : "def"}, {"label" : "withNode", "tail" : "(node: N): Graph[M, E, N]", "member" : "com.flowtick.graphs.GraphInstance.withNode", "link" : "com\/flowtick\/graphs\/GraphInstance.html#withNode(node:N):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "mapNodes", "tail" : "(f: (N) => B): Graph[M, E, B]", "member" : "com.flowtick.graphs.GraphInstance.mapNodes", "link" : "com\/flowtick\/graphs\/GraphInstance.html#mapNodes[B](f:N=>B):com.flowtick.graphs.Graph[M,E,B]", "kind" : "def"}, {"label" : "+", "tail" : "(edge: Edge[E, N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.GraphInstance.+", "link" : "com\/flowtick\/graphs\/GraphInstance.html#+(edge:com.flowtick.graphs.Edge[E,N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.GraphInstance#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[Edge[E, N]]", "member" : "com.flowtick.graphs.GraphInstance.edges", "link" : "com\/flowtick\/graphs\/GraphInstance.html#edges:scala.collection.Set[com.flowtick.graphs.Edge[E,N]]", "kind" : "val"}, {"label" : "contexts", "tail" : ": Map[N, NodeContext[N, E]]", "member" : "com.flowtick.graphs.GraphInstance.contexts", "link" : "com\/flowtick\/graphs\/GraphInstance.html#contexts:scala.collection.Map[N,com.flowtick.graphs.NodeContext[N,E]]", "kind" : "val"}, {"label" : "meta", "tail" : ": M", "member" : "com.flowtick.graphs.GraphInstance.meta", "link" : "com\/flowtick\/graphs\/GraphInstance.html#meta:M", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/GraphInstance.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withEdges", "tail" : "(edges: Iterable[Edge[E, N]]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.withEdges", "link" : "com\/flowtick\/graphs\/GraphInstance.html#withEdges(edges:Iterable[com.flowtick.graphs.Edge[E,N]]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "withNodes", "tail" : "(nodes: Iterable[N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.Graph.withNodes", "link" : "com\/flowtick\/graphs\/GraphInstance.html#withNodes(nodes:Iterable[N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "predecessors", "tail" : "(node: N): Iterable[N]", "member" : "com.flowtick.graphs.Graph.predecessors", "link" : "com\/flowtick\/graphs\/GraphInstance.html#predecessors(node:N):Iterable[N]", "kind" : "def"}, {"label" : "successors", "tail" : "(node: N): Iterable[N]", "member" : "com.flowtick.graphs.Graph.successors", "link" : "com\/flowtick\/graphs\/GraphInstance.html#successors(node:N):Iterable[N]", "kind" : "def"}, {"label" : "outgoing", "tail" : "(node: N): Iterable[Edge[E, N]]", "member" : "com.flowtick.graphs.Graph.outgoing", "link" : "com\/flowtick\/graphs\/GraphInstance.html#outgoing(node:N):Iterable[com.flowtick.graphs.Edge[E,N]]", "kind" : "def"}, {"label" : "incoming", "tail" : "(node: N): Iterable[Edge[E, N]]", "member" : "com.flowtick.graphs.Graph.incoming", "link" : "com\/flowtick\/graphs\/GraphInstance.html#incoming(node:N):Iterable[com.flowtick.graphs.Edge[E,N]]", "kind" : "def"}, {"label" : "findNode", "tail" : "(id: N): Option[NodeContext[N, E]]", "member" : "com.flowtick.graphs.Graph.findNode", "link" : "com\/flowtick\/graphs\/GraphInstance.html#findNode(id:N):Option[com.flowtick.graphs.NodeContext[N,E]]", "kind" : "def"}, {"label" : "nodes", "tail" : "(): Iterable[N]", "member" : "com.flowtick.graphs.Graph.nodes", "link" : "com\/flowtick\/graphs\/GraphInstance.html#nodes:Iterable[N]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/GraphInstance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/GraphInstance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/GraphInstance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/GraphInstance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/GraphInstance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/GraphInstance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/GraphInstance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/GraphInstance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/GraphInstance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/GraphInstance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/GraphInstance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/GraphInstance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/GraphInstance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/GraphInstance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/GraphInstance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/GraphInstance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/GraphInstance.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.Identifiable", "object" : "com\/flowtick\/graphs\/Identifiable$.html", "members_object" : [{"label" : "identity", "tail" : "(): Identifiable[T, T]", "member" : "com.flowtick.graphs.Identifiable.identity", "link" : "com\/flowtick\/graphs\/Identifiable$.html#identity[T]:com.flowtick.graphs.Identifiable[T,T]", "kind" : "def"}, {"label" : "identify", "tail" : "(f: (T) => I): Identifiable[T, I]", "member" : "com.flowtick.graphs.Identifiable.identify", "link" : "com\/flowtick\/graphs\/Identifiable$.html#identify[T,I](f:T=>I):com.flowtick.graphs.Identifiable[T,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Identifiable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Identifiable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Identifiable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Identifiable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Identifiable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Identifiable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Identifiable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Identifiable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Identifiable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Identifiable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Identifiable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Identifiable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Identifiable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Identifiable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Identifiable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Identifiable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/flowtick\/graphs\/Identifiable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Identifiable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Identifiable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Identifiable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Identifiable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Identifiable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Identifiable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Identifiable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Identifiable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Identifiable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Identifiable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Identifiable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Identifiable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Identifiable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Identifiable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Identifiable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Identifiable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Identifiable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(value: T): I", "member" : "com.flowtick.graphs.Identifiable.apply", "link" : "com\/flowtick\/graphs\/Identifiable.html#apply(value:T):I", "kind" : "abstract def"}], "shortDescription" : "Type class to define an identifier for a value"}, {"name" : "com.flowtick.graphs.Labeled", "object" : "com\/flowtick\/graphs\/Labeled$.html", "members_object" : [{"label" : "identity", "tail" : "(): Labeled[T, T]", "member" : "com.flowtick.graphs.Labeled.identity", "link" : "com\/flowtick\/graphs\/Labeled$.html#identity[T]:com.flowtick.graphs.Labeled[T,T]", "kind" : "def"}, {"label" : "label", "tail" : "(f: (T) => I): Labeled[T, I]", "member" : "com.flowtick.graphs.Labeled.label", "link" : "com\/flowtick\/graphs\/Labeled$.html#label[T,I](f:T=>I):com.flowtick.graphs.Labeled[T,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Labeled$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Labeled$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Labeled$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Labeled$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Labeled$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Labeled$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Labeled$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Labeled$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Labeled$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Labeled$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Labeled$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Labeled$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Labeled$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Labeled$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Labeled$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Labeled$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/flowtick\/graphs\/Labeled.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/Labeled.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/Labeled.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/Labeled.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/Labeled.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/Labeled.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/Labeled.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/Labeled.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/Labeled.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/Labeled.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/Labeled.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/Labeled.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/Labeled.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/Labeled.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/Labeled.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/Labeled.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/Labeled.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/Labeled.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(edge: E): L", "member" : "com.flowtick.graphs.Labeled.apply", "link" : "com\/flowtick\/graphs\/Labeled.html#apply(edge:E):L", "kind" : "abstract def"}], "shortDescription" : "Type class to define a label"}, {"name" : "com.flowtick.graphs.NodeContext", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.NodeContext#<init>", "error" : "unsupported entity"}, {"label" : "outgoing", "tail" : ": Set[Edge[E, N]]", "member" : "com.flowtick.graphs.NodeContext.outgoing", "link" : "com\/flowtick\/graphs\/NodeContext.html#outgoing:scala.collection.Set[com.flowtick.graphs.Edge[E,N]]", "kind" : "val"}, {"label" : "incoming", "tail" : ": Set[Edge[E, N]]", "member" : "com.flowtick.graphs.NodeContext.incoming", "link" : "com\/flowtick\/graphs\/NodeContext.html#incoming:scala.collection.Set[com.flowtick.graphs.Edge[E,N]]", "kind" : "val"}, {"label" : "node", "tail" : ": N", "member" : "com.flowtick.graphs.NodeContext.node", "link" : "com\/flowtick\/graphs\/NodeContext.html#node:N", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/NodeContext.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/NodeContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/NodeContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/NodeContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/NodeContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/NodeContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/NodeContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/NodeContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/NodeContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/NodeContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/NodeContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/NodeContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/NodeContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/NodeContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/NodeContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/NodeContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/NodeContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/NodeContext.html", "kind" : "case class"}], "com.flowtick.graphs.layout" : [{"name" : "com.flowtick.graphs.layout.Cell", "trait" : "com\/flowtick\/graphs\/layout\/Cell.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/Cell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "geometry", "tail" : "(): Option[Geometry]", "member" : "com.flowtick.graphs.layout.Cell.geometry", "link" : "com\/flowtick\/graphs\/layout\/Cell.html#geometry:Option[com.flowtick.graphs.layout.Geometry]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.layout.DefaultGeometry", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.layout.DefaultGeometry#<init>", "error" : "unsupported entity"}, {"label" : "height", "tail" : ": Double", "member" : "com.flowtick.graphs.layout.DefaultGeometry.height", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#height:Double", "kind" : "val"}, {"label" : "width", "tail" : ": Double", "member" : "com.flowtick.graphs.layout.DefaultGeometry.width", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#width:Double", "kind" : "val"}, {"label" : "y", "tail" : ": Double", "member" : "com.flowtick.graphs.layout.DefaultGeometry.y", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#y:Double", "kind" : "val"}, {"label" : "x", "tail" : ": Double", "member" : "com.flowtick.graphs.layout.DefaultGeometry.x", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#x:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/layout\/DefaultGeometry.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.layout.Geometry", "trait" : "com\/flowtick\/graphs\/layout\/Geometry.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "height", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.Geometry.height", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#height:Double", "kind" : "abstract def"}, {"label" : "width", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.Geometry.width", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#width:Double", "kind" : "abstract def"}, {"label" : "y", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.Geometry.y", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#y:Double", "kind" : "abstract def"}, {"label" : "x", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.Geometry.x", "link" : "com\/flowtick\/graphs\/layout\/Geometry.html#x:Double", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.layout.GraphLayout", "object" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html", "members_object" : [{"label" : "none", "tail" : ": GraphLayout", "member" : "com.flowtick.graphs.layout.GraphLayout.none", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#none:com.flowtick.graphs.layout.GraphLayout", "kind" : "val"}, {"label" : "NodeLayout", "tail" : "", "member" : "com.flowtick.graphs.layout.GraphLayout.NodeLayout", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#NodeLayout[Node]=Node=>Option[com.flowtick.graphs.layout.Cell]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/flowtick\/graphs\/layout\/GraphLayout.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "layout", "tail" : "(g: Graph[M, E, N])(edgeLabel: Labeled[Edge[E, N], String], edgeId: Identifiable[Edge[E, N], String], nodeId: Identifiable[N, String]): NodeLayout[N]", "member" : "com.flowtick.graphs.layout.GraphLayout.layout", "link" : "com\/flowtick\/graphs\/layout\/GraphLayout.html#layout[M,E,N](g:com.flowtick.graphs.Graph[M,E,N])(implicitedgeLabel:com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],String],implicitedgeId:com.flowtick.graphs.Identifiable[com.flowtick.graphs.Edge[E,N],String],implicitnodeId:com.flowtick.graphs.Identifiable[N,String]):com.flowtick.graphs.layout.GraphLayout.NodeLayout[N]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.layout.JGraphGeometry", "shortDescription" : "", "members_case class" : [{"label" : "height", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.JGraphGeometry.height", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#height:Double", "kind" : "def"}, {"label" : "width", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.JGraphGeometry.width", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#width:Double", "kind" : "def"}, {"label" : "y", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.JGraphGeometry.y", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#y:Double", "kind" : "def"}, {"label" : "x", "tail" : "(): Double", "member" : "com.flowtick.graphs.layout.JGraphGeometry.x", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#x:Double", "kind" : "def"}, {"member" : "com.flowtick.graphs.layout.JGraphGeometry#<init>", "error" : "unsupported entity"}, {"label" : "geometry", "tail" : ": mxGeometry", "member" : "com.flowtick.graphs.layout.JGraphGeometry.geometry", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#geometry:com.mxgraph.model.mxGeometry", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/layout\/JGraphGeometry.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.layout.JGraphXCell", "shortDescription" : "", "members_case class" : [{"label" : "geometry", "tail" : "(): Option[Geometry]", "member" : "com.flowtick.graphs.layout.JGraphXCell.geometry", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#geometry:Option[com.flowtick.graphs.layout.Geometry]", "kind" : "def"}, {"member" : "com.flowtick.graphs.layout.JGraphXCell#<init>", "error" : "unsupported entity"}, {"label" : "cell", "tail" : ": mxCell", "member" : "com.flowtick.graphs.layout.JGraphXCell.cell", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#cell:com.mxgraph.model.mxCell", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/layout\/JGraphXCell.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.layout.JGraphXLayout", "shortDescription" : "", "members_class" : [{"label" : "layout", "tail" : "(graph: Graph[M, E, N]): mxGraph", "member" : "com.flowtick.graphs.layout.JGraphXLayout.layout", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#layout(graph:com.flowtick.graphs.Graph[M,E,N]):com.mxgraph.view.mxGraph", "kind" : "def"}, {"member" : "com.flowtick.graphs.layout.JGraphXLayout#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/layout\/JGraphXLayout.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.layout.JGraphXLayouter", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html", "members_object" : [{"label" : "layout", "tail" : "(g: Graph[M, E, N])(edgeLabel: Labeled[Edge[E, N], String], edgeId: Identifiable[Edge[E, N], String], nodeId: Identifiable[N, String]): NodeLayout[N]", "member" : "com.flowtick.graphs.layout.JGraphXLayouter.layout", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#layout[M,E,N](g:com.flowtick.graphs.Graph[M,E,N])(implicitedgeLabel:com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],String],implicitedgeId:com.flowtick.graphs.Identifiable[com.flowtick.graphs.Edge[E,N],String],implicitnodeId:com.flowtick.graphs.Identifiable[N,String]):com.flowtick.graphs.layout.GraphLayout.NodeLayout[N]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayouter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.layout.JGraphXLayoutRenderer", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html", "members_object" : [{"label" : "renderImage", "tail" : "(graph: mxGraph, output: OutputStream, format: String, scale: Double, padding: Int): Try[OutputStream]", "member" : "com.flowtick.graphs.layout.JGraphXLayoutRenderer.renderImage", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#renderImage(graph:com.mxgraph.view.mxGraph,output:java.io.OutputStream,format:String,scale:Double,padding:Int):scala.util.Try[java.io.OutputStream]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/JGraphXLayoutRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.layout.ShapeDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.layout.ShapeDefinition#<init>", "error" : "unsupported entity"}, {"label" : "color", "tail" : ": String", "member" : "com.flowtick.graphs.layout.ShapeDefinition.color", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#color:String", "kind" : "val"}, {"label" : "shapeType", "tail" : ": String", "member" : "com.flowtick.graphs.layout.ShapeDefinition.shapeType", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#shapeType:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/layout\/ShapeDefinition.html", "kind" : "case class"}], "com.flowtick.graphs.cat" : [{"name" : "com.flowtick.graphs.cat.GraphApplicative", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html", "members_object" : [{"label" : "apply", "tail" : "(metaMonoid: Monoid[M]): GraphNodeApplicative[M, E]", "member" : "com.flowtick.graphs.cat.GraphApplicative.apply", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#apply[M,E](implicitmetaMonoid:cats.Monoid[M]):com.flowtick.graphs.cat.package.GraphNodeApplicative[M,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphApplicative$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.cat.GraphInstances", "trait" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html", "kind" : "trait", "members_trait" : [{"label" : "graphNodeApplicative", "tail" : "(metaMonoid: Monoid[M]): GraphNodeApplicative[M, E]", "member" : "com.flowtick.graphs.cat.GraphInstances.graphNodeApplicative", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#graphNodeApplicative[M,E](implicitmetaMonoid:cats.Monoid[M]):com.flowtick.graphs.cat.package.GraphNodeApplicative[M,E]", "kind" : "implicit def"}, {"label" : "graphMonoid", "tail" : "(metaMonoid: Monoid[M]): Monoid[Graph[M, E, N]]", "member" : "com.flowtick.graphs.cat.GraphInstances.graphMonoid", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#graphMonoid[M,E,N](implicitmetaMonoid:cats.Monoid[M]):cats.Monoid[com.flowtick.graphs.Graph[M,E,N]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.cat.GraphMonoid", "shortDescription" : "A monoid to combine graphs.", "object" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html", "members_class" : [{"label" : "combine", "tail" : "(x: Graph[M, E, N], y: Graph[M, E, N]): Graph[M, E, N]", "member" : "com.flowtick.graphs.cat.GraphMonoid.combine", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#combine(x:com.flowtick.graphs.Graph[M,E,N],y:com.flowtick.graphs.Graph[M,E,N]):com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Graph[M, E, N]", "member" : "com.flowtick.graphs.cat.GraphMonoid.empty", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#empty:com.flowtick.graphs.Graph[M,E,N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.cat.GraphMonoid#<init>", "error" : "unsupported entity"}, {"label" : "combineAllOption", "tail" : "(as: IterableOnce[Graph[M, E, N]]): Option[Graph[M, E, N]]", "member" : "cats.kernel.Monoid.combineAllOption", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#combineAllOption(as:IterableOnce[A]):Option[A]", "kind" : "def"}, {"label" : "combineAll", "tail" : "(as: IterableOnce[Graph[M, E, N]]): Graph[M, E, N]", "member" : "cats.kernel.Monoid.combineAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#combineAll(as:IterableOnce[A]):A", "kind" : "def"}, {"label" : "combineN", "tail" : "(a: Graph[M, E, N], n: Int): Graph[M, E, N]", "member" : "cats.kernel.Monoid.combineN", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#combineN(a:A,n:Int):A", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(a: Graph[M, E, N])(ev: Eq[Graph[M, E, N]]): Boolean", "member" : "cats.kernel.Monoid.isEmpty", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#isEmpty(a:A)(implicitev:cats.kernel.Eq[A]):Boolean", "kind" : "def"}, {"label" : "repeatedCombineN", "tail" : "(a: Graph[M, E, N], n: Int): Graph[M, E, N]", "member" : "cats.kernel.Semigroup.repeatedCombineN", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#repeatedCombineN(a:A,n:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(metaMonoid: Monoid[M]): GraphMonoid[M, E, N]", "member" : "com.flowtick.graphs.cat.GraphMonoid.apply", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#apply[M,E,N](implicitmetaMonoid:cats.Monoid[M]):com.flowtick.graphs.cat.package.GraphMonoid[M,E,N]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/cat\/package$$GraphMonoid.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.cat.GraphNodeApplicative", "shortDescription" : "An applicative for the nodes of a graph.", "members_class" : [{"label" : "ap", "tail" : "(ff: Graph[M, E, (A) => B])(fa: Graph[M, E, A]): Graph[M, E, B]", "member" : "com.flowtick.graphs.cat.GraphNodeApplicative.ap", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap[A,B](ff:com.flowtick.graphs.Graph[M,E,A=>B])(fa:com.flowtick.graphs.Graph[M,E,A]):com.flowtick.graphs.Graph[M,E,B]", "kind" : "def"}, {"label" : "pure", "tail" : "(x: A): Graph[M, E, A]", "member" : "com.flowtick.graphs.cat.GraphNodeApplicative.pure", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#pure[A](x:A):com.flowtick.graphs.Graph[M,E,A]", "kind" : "def"}, {"member" : "com.flowtick.graphs.cat.GraphNodeApplicative#<init>", "error" : "unsupported entity"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => Graph[M, E, A]): Graph[M, E, Unit]", "member" : "cats.Applicative.whenA", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => Graph[M, E, A]): Graph[M, E, Unit]", "member" : "cats.Applicative.unlessA", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]Graph[M, E, G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]Graph[M, E, G[α]]]", "member" : "cats.Applicative.compose", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: Graph[M, E, A]): Graph[M, E, List[A]]", "member" : "cats.Applicative.replicateA", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: Graph[M, E, A])(f: (A) => B): Graph[M, E, B]", "member" : "cats.Applicative.map", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "unit", "tail" : "(): Graph[M, E, Unit]", "member" : "cats.Applicative.unit", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): Graph[M, E, A]", "member" : "cats.InvariantMonoidal.point", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: Graph[M, E, Boolean])(ifTrue: Graph[M, E, A], ifFalse: Graph[M, E, A]): Graph[M, E, A]", "member" : "cats.Apply.ifA", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]Graph[M, E, G[α]]]", "member" : "cats.Apply.compose", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: Graph[M, E, A], fb: Eval[Graph[M, E, B]])(f: (A, B) => Z): Eval[Graph[M, E, Z]]", "member" : "cats.Apply.map2Eval", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: Graph[M, E, A], fb: Graph[M, E, B])(f: (A, B) => Z): Graph[M, E, Z]", "member" : "cats.Apply.map2", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: Graph[M, E, (A, B) => Z])(fa: Graph[M, E, A], fb: Graph[M, E, B]): Graph[M, E, Z]", "member" : "cats.Apply.ap2", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: Graph[M, E, A])(fb: Graph[M, E, B]): Graph[M, E, A]", "member" : "cats.Apply.<*", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: Graph[M, E, A])(fb: Graph[M, E, B]): Graph[M, E, B]", "member" : "cats.Apply.*>", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: Graph[M, E, (A) => B])(fa: Graph[M, E, A]): Graph[M, E, B]", "member" : "cats.Apply.<*>", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "product", "tail" : "(fa: Graph[M, E, A], fb: Graph[M, E, B]): Graph[M, E, (A, B)]", "member" : "cats.Apply.product", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: Graph[M, E, A])(fb: Graph[M, E, B]): Graph[M, E, A]", "member" : "cats.Apply.productL", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: Graph[M, E, A])(fb: Graph[M, E, B]): Graph[M, E, B]", "member" : "cats.Apply.productR", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "tuple22", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20], f21: Graph[M, E, A21]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20], f21: Graph[M, E, A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20], f21: Graph[M, E, A21]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19], f20: Graph[M, E, A20]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18], f19: Graph[M, E, A19]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17], f18: Graph[M, E, A18]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16], f17: Graph[M, E, A17]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15], f16: Graph[M, E, A16]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14], f15: Graph[M, E, A15]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13], f14: Graph[M, E, A14]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12], f13: Graph[M, E, A13]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11], f12: Graph[M, E, A12]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10], f11: Graph[M, E, A11]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9], f10: Graph[M, E, A10]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8], f9: Graph[M, E, A9]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7], f8: Graph[M, E, A8]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6], f7: Graph[M, E, A7]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6]): Graph[M, E, (A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5, A6) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5], f6: Graph[M, E, A6]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5]): Graph[M, E, (A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5])(f: (A0, A1, A2, A3, A4, A5) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4, A5) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4], f5: Graph[M, E, A5]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4]): Graph[M, E, (A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4])(f: (A0, A1, A2, A3, A4) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3, A4) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3], f4: Graph[M, E, A4]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3]): Graph[M, E, (A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3])(f: (A0, A1, A2, A3) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: Graph[M, E, (A0, A1, A2, A3) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2], f3: Graph[M, E, A3]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2]): Graph[M, E, (A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2])(f: (A0, A1, A2) => Z): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: Graph[M, E, (A0, A1, A2) => Z])(f0: Graph[M, E, A0], f1: Graph[M, E, A1], f2: Graph[M, E, A2]): Graph[M, E, Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: Graph[M, E, A], f2: Graph[M, E, B]): Graph[M, E, (A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]Graph[M, E, G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]Graph[M, E, G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]Graph[M, E, G[α]]]", "member" : "cats.Functor.compose", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: Graph[M, E, Boolean])(ifTrue: => A, ifFalse: => A): Graph[M, E, A]", "member" : "cats.Functor.ifF", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: Graph[M, E, (A, B)]): (Graph[M, E, A], Graph[M, E, B])", "member" : "cats.Functor.unzip", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: Graph[M, E, A], b: B): Graph[M, E, (A, B)]", "member" : "cats.Functor.tupleRight", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: Graph[M, E, A], b: B): Graph[M, E, (B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: Graph[M, E, A], b: B): Graph[M, E, B]", "member" : "cats.Functor.as", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: Graph[M, E, A])(f: (A) => B): Graph[M, E, (A, B)]", "member" : "cats.Functor.fproduct", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: Graph[M, E, A]): Graph[M, E, Unit]", "member" : "cats.Functor.void", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (Graph[M, E, A]) => Graph[M, E, B]", "member" : "cats.Functor.lift", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: Graph[M, E, A]): Graph[M, E, B]", "member" : "cats.Functor.widen", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: Graph[M, E, A])(f: (A) => B): Graph[M, E, B]", "member" : "cats.Functor.fmap", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: Graph[M, E, A])(f: (A) => B)(g: (B) => A): Graph[M, E, B]", "member" : "cats.Functor.imap", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]Graph[M, E, G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]Graph[M, E, G[α]]]", "member" : "cats.Invariant.compose", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/cat\/package$$GraphNodeApplicative.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.cat.instances", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/cat\/package$$instances$.html", "members_object" : [{"label" : "graphNodeApplicative", "tail" : "(metaMonoid: Monoid[M]): GraphNodeApplicative[M, E]", "member" : "com.flowtick.graphs.cat.GraphInstances.graphNodeApplicative", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#graphNodeApplicative[M,E](implicitmetaMonoid:cats.Monoid[M]):com.flowtick.graphs.cat.package.GraphNodeApplicative[M,E]", "kind" : "implicit def"}, {"label" : "graphMonoid", "tail" : "(metaMonoid: Monoid[M]): Monoid[Graph[M, E, N]]", "member" : "com.flowtick.graphs.cat.GraphInstances.graphMonoid", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#graphMonoid[M,E,N](implicitmetaMonoid:cats.Monoid[M]):cats.Monoid[com.flowtick.graphs.Graph[M,E,N]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/cat\/package$$instances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.flowtick.graphs.algorithm" : [{"name" : "com.flowtick.graphs.algorithm.BreadthFirstSearch", "shortDescription" : "", "members_class" : [{"label" : "run", "tail" : "(): Seq[N]", "member" : "com.flowtick.graphs.algorithm.BreadthFirstSearch.run", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#run:Seq[N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.algorithm.BreadthFirstSearch#<init>", "error" : "unsupported entity"}, {"label" : "onBacktrack", "tail" : "(f: (N) => Any): BreadthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onBacktrack", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#onBacktrack(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onComplete", "tail" : "(f: (N) => Any): BreadthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onComplete", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#onComplete(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onVisit", "tail" : "(f: (N) => Any): BreadthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onVisit", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#onVisit(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "backtrackCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.backtrackCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#backtrackCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "completeCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.completeCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#completeCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "visitCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.visitCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#visitCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/algorithm\/BreadthFirstSearch.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.algorithm.DepthFirstSearch", "shortDescription" : "", "members_class" : [{"label" : "run", "tail" : "(): Seq[N]", "member" : "com.flowtick.graphs.algorithm.DepthFirstSearch.run", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#run:Seq[N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.algorithm.DepthFirstSearch#<init>", "error" : "unsupported entity"}, {"label" : "onBacktrack", "tail" : "(f: (N) => Any): DepthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onBacktrack", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#onBacktrack(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onComplete", "tail" : "(f: (N) => Any): DepthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onComplete", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#onComplete(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onVisit", "tail" : "(f: (N) => Any): DepthFirstSearch.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onVisit", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#onVisit(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "backtrackCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.backtrackCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#backtrackCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "completeCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.completeCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#completeCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "visitCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.visitCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#visitCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/algorithm\/DepthFirstSearch.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.algorithm.DijkstraShortestPath", "shortDescription" : "", "members_class" : [{"label" : "shortestPath", "tail" : "(start: N, end: N): Iterable[Edge[E, N]]", "member" : "com.flowtick.graphs.algorithm.DijkstraShortestPath.shortestPath", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#shortestPath(start:N,end:N):Iterable[com.flowtick.graphs.Edge[E,N]]", "kind" : "def"}, {"member" : "com.flowtick.graphs.algorithm.DijkstraShortestPath#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/algorithm\/DijkstraShortestPath.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.algorithm.GraphOps", "shortDescription" : "", "members_class" : [{"label" : "dijkstra", "tail" : "(numeric: Numeric[E], label: Labeled[Edge[E, N], E]): DijkstraShortestPath[M, E, N]", "member" : "com.flowtick.graphs.algorithm.GraphOps.dijkstra", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#dijkstra(implicitnumeric:Numeric[E],implicitlabel:com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],E]):com.flowtick.graphs.algorithm.DijkstraShortestPath[M,E,N]", "kind" : "def"}, {"label" : "topologicalSort", "tail" : "(): List[N]", "member" : "com.flowtick.graphs.algorithm.GraphOps.topologicalSort", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#topologicalSort:List[N]", "kind" : "def"}, {"label" : "dfs", "tail" : "(startNode: N): DepthFirstSearch[M, E, N]", "member" : "com.flowtick.graphs.algorithm.GraphOps.dfs", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#dfs(startNode:N):com.flowtick.graphs.algorithm.DepthFirstSearch[M,E,N]", "kind" : "def"}, {"label" : "bfs", "tail" : "(startNode: N): BreadthFirstSearch[M, E, N]", "member" : "com.flowtick.graphs.algorithm.GraphOps.bfs", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#bfs(startNode:N):com.flowtick.graphs.algorithm.BreadthFirstSearch[M,E,N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.algorithm.GraphOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/algorithm\/package$$GraphOps.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.algorithm.TopologicalSort", "shortDescription" : "", "members_class" : [{"label" : "sort", "tail" : "(): List[N]", "member" : "com.flowtick.graphs.algorithm.TopologicalSort.sort", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#sort:List[N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.algorithm.TopologicalSort#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : "(): Seq[N]", "member" : "com.flowtick.graphs.algorithm.DepthFirstSearch.run", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#run:Seq[N]", "kind" : "def"}, {"label" : "onBacktrack", "tail" : "(f: (N) => Any): TopologicalSort.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onBacktrack", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#onBacktrack(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onComplete", "tail" : "(f: (N) => Any): TopologicalSort.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onComplete", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#onComplete(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onVisit", "tail" : "(f: (N) => Any): TopologicalSort.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onVisit", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#onVisit(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "backtrackCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.backtrackCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#backtrackCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "completeCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.completeCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#completeCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "visitCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.visitCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#visitCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/algorithm\/TopologicalSort.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.algorithm.Traversal", "trait" : "com\/flowtick\/graphs\/algorithm\/Traversal.html", "kind" : "trait", "members_trait" : [{"label" : "onBacktrack", "tail" : "(f: (N) => Any): Traversal.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onBacktrack", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#onBacktrack(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onComplete", "tail" : "(f: (N) => Any): Traversal.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onComplete", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#onComplete(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "onVisit", "tail" : "(f: (N) => Any): Traversal.this.type", "member" : "com.flowtick.graphs.algorithm.Traversal.onVisit", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#onVisit(f:N=>Any):Traversal.this.type", "kind" : "def"}, {"label" : "backtrackCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.backtrackCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#backtrackCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "completeCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.completeCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#completeCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "visitCallbacks", "tail" : ": ListBuffer[(N) => Any]", "member" : "com.flowtick.graphs.algorithm.Traversal.visitCallbacks", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#visitCallbacks:scala.collection.mutable.ListBuffer[N=>Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): Seq[N]", "member" : "com.flowtick.graphs.algorithm.Traversal.run", "link" : "com\/flowtick\/graphs\/algorithm\/Traversal.html#run:Seq[N]", "kind" : "abstract def"}], "shortDescription" : ""}], "com.flowtick" : [], "com" : [], "com.flowtick.graphs.graphml" : [{"name" : "com.flowtick.graphs.graphml.Datatype", "trait" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html", "kind" : "trait", "members_trait" : [{"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, T]", "member" : "com.flowtick.graphs.graphml.Deserializer.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,T]", "kind" : "abstract def"}, {"label" : "serialize", "tail" : "(value: T): NodeSeq", "member" : "com.flowtick.graphs.graphml.Serializer.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Datatype.html#serialize(value:T):scala.xml.NodeSeq", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.graphml.DatatypeString", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html", "members_object" : [{"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): Validated[NonEmptyList[Throwable], String]", "member" : "com.flowtick.graphs.graphml.DatatypeString.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.Validated[cats.data.NonEmptyList[Throwable],String]", "kind" : "def"}, {"label" : "serialize", "tail" : "(value: String): NodeSeq", "member" : "com.flowtick.graphs.graphml.DatatypeString.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#serialize(value:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeString$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.DatatypeUnit", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html", "members_object" : [{"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): Validated[NonEmptyList[Throwable], Unit]", "member" : "com.flowtick.graphs.graphml.DatatypeUnit.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.Validated[cats.data.NonEmptyList[Throwable],Unit]", "kind" : "def"}, {"label" : "serialize", "tail" : "(value: Unit): NodeSeq", "member" : "com.flowtick.graphs.graphml.DatatypeUnit.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#serialize(value:Unit):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$DatatypeUnit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.Deserializer", "trait" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, T]", "member" : "com.flowtick.graphs.graphml.Deserializer.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Deserializer.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.graphml.FromGraphML", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html", "members_object" : [{"label" : "apply", "tail" : "(graphml: String)(graphMLDatatype: Datatype[GraphMLGraphType[V, N, M]]): Either[NonEmptyList[Throwable], GraphMLGraphType[V, N, M]]", "member" : "com.flowtick.graphs.graphml.FromGraphML.apply", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#apply[V,N,M](graphml:String)(implicitgraphMLDatatype:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.package.GraphMLGraphType[V,N,M]]):scala.util.Either[cats.data.NonEmptyList[Throwable],com.flowtick.graphs.graphml.package.GraphMLGraphType[V,N,M]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromGraphML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.FromList", "trait" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(l: GenTraversable[_]): Option[T]", "member" : "com.flowtick.graphs.graphml.FromList.apply", "link" : "com\/flowtick\/graphs\/graphml\/package$$FromList.html#apply(l:collection.GenTraversable[_]):Option[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.graphml.generic", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html", "members_object" : [{"label" : "graphMLDoubleEdgeDataType", "tail" : ": Datatype[GraphMLEdge[Double]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLDoubleEdgeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLDoubleEdgeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLEdge[Double]]", "kind" : "implicit val"}, {"label" : "graphMLDoubleNodeDataType", "tail" : ": Datatype[GraphMLNode[Double]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLDoubleNodeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLDoubleNodeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLNode[Double]]", "kind" : "implicit val"}, {"label" : "graphMLIntEdgeDataType", "tail" : ": Datatype[GraphMLEdge[Int]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLIntEdgeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLIntEdgeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLEdge[Int]]", "kind" : "implicit val"}, {"label" : "graphMLIntNodeDataType", "tail" : ": Datatype[GraphMLNode[Int]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLIntNodeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLIntNodeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLNode[Int]]", "kind" : "implicit val"}, {"label" : "graphMLStringEdgeDataType", "tail" : ": Datatype[GraphMLEdge[String]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLStringEdgeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLStringEdgeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLEdge[String]]", "kind" : "implicit val"}, {"label" : "graphMLStringNodeDataType", "tail" : ": Datatype[GraphMLNode[String]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLStringNodeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLStringNodeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLNode[String]]", "kind" : "implicit val"}, {"label" : "graphMLUnitEdgeDataType", "tail" : ": Datatype[GraphMLEdge[Unit]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLUnitEdgeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLUnitEdgeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLEdge[Unit]]", "kind" : "implicit val"}, {"label" : "graphMLUnitNodeDataType", "tail" : ": Datatype[GraphMLNode[Unit]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLUnitNodeDataType", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLUnitNodeDataType:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLNode[Unit]]", "kind" : "implicit val"}, {"label" : "graphMLEdgeDataTypeGeneric", "tail" : "(classTag: ClassTag[T], genericValue: Aux[T, Repr], keys: Keys[Repr], fromList: FromListGeneric[T, FromRepr]): Datatype[GraphMLEdge[T]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLEdgeDataTypeGeneric", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLEdgeDataTypeGeneric[T,Repr<:shapeless.HList,FromRepr<:shapeless.HList](implicitclassTag:scala.reflect.ClassTag[T],implicitgenericValue:shapeless.LabelledGeneric.Aux[T,Repr],implicitkeys:shapeless.ops.record.Keys[Repr],implicitfromList:com.flowtick.graphs.graphml.generic.FromListGeneric[T,FromRepr]):com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLEdge[T]]", "kind" : "implicit def"}, {"label" : "graphMLNodeDataTypeGeneric", "tail" : "(classTag: ClassTag[T], genericValue: Aux[T, Repr], keys: Keys[Repr], fromList: FromListGeneric[T, FromRepr]): Datatype[GraphMLNode[T]]", "member" : "com.flowtick.graphs.graphml.generic.graphMLNodeDataTypeGeneric", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#graphMLNodeDataTypeGeneric[T,Repr<:shapeless.HList,FromRepr<:shapeless.HList](implicitclassTag:scala.reflect.ClassTag[T],implicitgenericValue:shapeless.LabelledGeneric.Aux[T,Repr],implicitkeys:shapeless.ops.record.Keys[Repr],implicitfromList:com.flowtick.graphs.graphml.generic.FromListGeneric[T,FromRepr]):com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.GraphMLNode[T]]", "kind" : "implicit def"}, {"label" : "stringFromList", "tail" : "(generic: Aux[String, ::[String, HNil]], typeable: Typeable[::[String, HNil]], fromTraversable: FromTraversable[::[String, HNil]]): FromListGeneric[String, ::[String, HNil]]", "member" : "com.flowtick.graphs.graphml.generic.stringFromList", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#stringFromList(implicitgeneric:shapeless.Generic.Aux[String,String::shapeless.HNil],implicittypeable:shapeless.Typeable[String::shapeless.HNil],implicitfromTraversable:shapeless.ops.traversable.FromTraversable[String::shapeless.HNil]):com.flowtick.graphs.graphml.generic.FromListGeneric[String,String::shapeless.HNil]", "kind" : "implicit def"}, {"label" : "genericFromList", "tail" : "(generic: Aux[T, Repr], typeable: Typeable[Repr], fromTraversable: FromTraversable[Repr]): FromListGeneric[T, Repr]", "member" : "com.flowtick.graphs.graphml.generic.genericFromList", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#genericFromList[T,Repr<:shapeless.HList](implicitgeneric:shapeless.Generic.Aux[T,Repr],implicittypeable:shapeless.Typeable[Repr],implicitfromTraversable:shapeless.ops.traversable.FromTraversable[Repr]):com.flowtick.graphs.graphml.generic.FromListGeneric[T,Repr]", "kind" : "implicit def"}, {"label" : "Datatype", "tail" : "", "member" : "com.flowtick.graphs.graphml.generic.Datatype", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#Datatype", "kind" : "object"}, {"label" : "FromListGeneric", "tail" : "", "member" : "com.flowtick.graphs.graphml.generic.FromListGeneric", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#FromListGeneric[T,Repr<:shapeless.HList]extendspackage.FromList[T,Repr]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$generic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.GraphML", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/GraphML$.html", "members_object" : [{"label" : "fromEdges", "tail" : "(edges: Iterable[Edge[GraphMLEdge[V], GraphMLNode[N]]]): Graph[GraphMLGraph[Unit], GraphMLEdge[V], GraphMLNode[N]]", "member" : "com.flowtick.graphs.graphml.GraphML.fromEdges", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#fromEdges[V,N](edges:Iterable[com.flowtick.graphs.Edge[com.flowtick.graphs.graphml.GraphMLEdge[V],com.flowtick.graphs.graphml.GraphMLNode[N]]]):com.flowtick.graphs.Graph[com.flowtick.graphs.graphml.GraphMLGraph[Unit],com.flowtick.graphs.graphml.GraphMLEdge[V],com.flowtick.graphs.graphml.GraphMLNode[N]]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, meta: M, edges: Iterable[Edge[GraphMLEdge[V], GraphMLNode[N]]], nodes: Iterable[GraphMLNode[N]]): Graph[GraphMLGraph[M], GraphMLEdge[V], GraphMLNode[N]]", "member" : "com.flowtick.graphs.graphml.GraphML.apply", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#apply[V,N,M](id:String,meta:M,edges:Iterable[com.flowtick.graphs.Edge[com.flowtick.graphs.graphml.GraphMLEdge[V],com.flowtick.graphs.graphml.GraphMLNode[N]]],nodes:Iterable[com.flowtick.graphs.graphml.GraphMLNode[N]]):com.flowtick.graphs.Graph[com.flowtick.graphs.graphml.GraphMLGraph[M],com.flowtick.graphs.graphml.GraphMLEdge[V],com.flowtick.graphs.graphml.GraphMLNode[N]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.GraphMLConverterOps", "shortDescription" : "", "members_class" : [{"label" : "asGraphML", "tail" : "(): Graph[GraphMLGraph[M], GraphMLEdge[E], GraphMLNode[N]]", "member" : "com.flowtick.graphs.graphml.GraphMLConverterOps.asGraphML", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#asGraphML:com.flowtick.graphs.Graph[com.flowtick.graphs.graphml.GraphMLGraph[M],com.flowtick.graphs.graphml.GraphMLEdge[E],com.flowtick.graphs.graphml.GraphMLNode[N]]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLConverterOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLConverterOps.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLDatatype", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html", "members_class" : [{"label" : "parseGraphNodes", "tail" : "(graphNode: Node, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, PartialParsedGraph[N]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseGraphNodes", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#parseGraphNodes(graphNode:scala.xml.Node,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.PartialParsedGraph[N]]", "kind" : "def"}, {"label" : "parseNode", "tail" : "(nodeXml: Node, graphKeys: Map[String, GraphMLKey]): Validated[NonEmptyList[Throwable], PartialParsedGraph[N]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseNode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#parseNode(nodeXml:scala.xml.Node,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.Validated[cats.data.NonEmptyList[Throwable],com.flowtick.graphs.graphml.PartialParsedGraph[N]]", "kind" : "def"}, {"label" : "mergePartialGraphs", "tail" : "(graphs: Seq[ValidatedNel[Throwable, PartialParsedGraph[N]]]): ValidatedNel[Throwable, PartialParsedGraph[N]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.mergePartialGraphs", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#mergePartialGraphs(graphs:Seq[cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.PartialParsedGraph[N]]]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.PartialParsedGraph[N]]", "kind" : "def"}, {"label" : "parseEdges", "tail" : "(edgeXmlNodes: List[Node], nodes: Map[String, GraphMLNode[N]], keys: Map[String, GraphMLKey]): Validated[NonEmptyList[Throwable], List[Edge[GraphMLEdge[E], GraphMLNode[N]]]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseEdges", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#parseEdges(edgeXmlNodes:List[scala.xml.Node],nodes:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLNode[N]],keys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.Validated[cats.data.NonEmptyList[Throwable],List[com.flowtick.graphs.Edge[com.flowtick.graphs.graphml.GraphMLEdge[E],com.flowtick.graphs.graphml.GraphMLNode[N]]]]", "kind" : "def"}, {"label" : "parseGraphRoot", "tail" : "(graph: Node, graphKeys: Map[String, GraphMLKey]): Validated[NonEmptyList[Throwable], GraphMLGraphType[M, E, N]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseGraphRoot", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#parseGraphRoot(graph:scala.xml.Node,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.Validated[cats.data.NonEmptyList[Throwable],com.flowtick.graphs.graphml.GraphMLGraphType[M,E,N]]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLGraphType[M, E, N]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLGraphType[M,E,N]]", "kind" : "def"}, {"label" : "serialize", "tail" : "(g: GraphMLGraphType[M, E, N]): NodeSeq", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#serialize(g:com.flowtick.graphs.graphml.GraphMLGraphType[M,E,N]):scala.xml.NodeSeq", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLDatatype#<init>", "error" : "unsupported entity"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseValue", "tail" : "(xml: Node, graphKeys: Map[String, GraphMLKey], valueKeys: List[String])(fromList: FromList[T, Repr]): ValidatedNel[IllegalStateException, ValueWithProperties[T]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseValue", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#parseValue[T,Repr<:shapeless.HList](xml:scala.xml.Node,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey],valueKeys:List[String])(implicitfromList:com.flowtick.graphs.graphml.FromList[T,Repr]):cats.data.ValidatedNel[IllegalStateException,com.flowtick.graphs.graphml.ValueWithProperties[T]]", "kind" : "def"}, {"label" : "isValueProperty", "tail" : "(property: GraphMLProperty, graphKeys: Map[String, GraphMLKey], valueKeys: List[String]): Boolean", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.isValueProperty", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#isValueProperty(property:com.flowtick.graphs.graphml.GraphMLProperty,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey],valueKeys:List[String]):Boolean", "kind" : "def"}, {"label" : "parseKeys", "tail" : "(rootElem: Node): Map[String, GraphMLKey]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseKeys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#parseKeys(rootElem:scala.xml.Node):scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "parseProperties", "tail" : "(node: Node): Seq[GraphMLProperty]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.parseProperties", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#parseProperties(node:scala.xml.Node):Seq[com.flowtick.graphs.graphml.GraphMLProperty]", "kind" : "def"}, {"label" : "singleAttributeValue", "tail" : "(attributeName: String, node: Node): Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.singleAttributeValue", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#singleAttributeValue(attributeName:String,node:scala.xml.Node):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(graphMLDatatype: Datatype[GraphMLGraphType[V, N, M]]): Datatype[GraphMLGraphType[V, N, M]]", "member" : "com.flowtick.graphs.graphml.GraphMLDatatype.apply", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#apply[V,N,M](implicitgraphMLDatatype:com.flowtick.graphs.graphml.Datatype[com.flowtick.graphs.graphml.GraphMLGraphType[V,N,M]]):com.flowtick.graphs.graphml.Datatype[com.flowtick.graphs.graphml.GraphMLGraphType[V,N,M]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/GraphMLDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLEdge", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.GraphMLEdge#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": Seq[GraphMLProperty]", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.properties", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#properties:Seq[com.flowtick.graphs.graphml.GraphMLProperty]", "kind" : "val"}, {"label" : "label", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.label", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#label:Option[String]", "kind" : "val"}, {"label" : "target", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.target", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#target:Option[String]", "kind" : "val"}, {"label" : "source", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.source", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#source:Option[String]", "kind" : "val"}, {"label" : "value", "tail" : ": V", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.value", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#value:V", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "com.flowtick.graphs.graphml.GraphMLEdge.id", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/GraphMLEdge.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLEdgeBuilder", "shortDescription" : "", "members_class" : [{"label" : "-->", "tail" : "(to: GraphMLNode[X]): Edge[GraphMLEdge[Unit], GraphMLNode[X]]", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeBuilder.-->", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#-->(to:com.flowtick.graphs.graphml.GraphMLNode[X]):com.flowtick.graphs.Edge[com.flowtick.graphs.graphml.GraphMLEdge[Unit],com.flowtick.graphs.graphml.GraphMLNode[X]]", "kind" : "def"}, {"label" : "-->", "tail" : "(value: V, to: GraphMLNode[X]): Edge[GraphMLEdge[V], GraphMLNode[X]]", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeBuilder.-->", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#-->[V](value:V,to:com.flowtick.graphs.graphml.GraphMLNode[X]):com.flowtick.graphs.Edge[com.flowtick.graphs.graphml.GraphMLEdge[V],com.flowtick.graphs.graphml.GraphMLNode[X]]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLEdgeBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLEdgeBuilder.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype", "shortDescription" : "", "members_class" : [{"label" : "extractEdgeLabel", "tail" : "(properties: Seq[GraphMLProperty], keys: Map[String, GraphMLKey]): Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype.extractEdgeLabel", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#extractEdgeLabel(properties:Seq[com.flowtick.graphs.graphml.GraphMLProperty],keys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):Option[String]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLEdge[V]]", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLEdge[V]]", "kind" : "def"}, {"label" : "serialize", "tail" : "(edge: GraphMLEdge[V]): NodeSeq", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#serialize(edge:com.flowtick.graphs.graphml.GraphMLEdge[V]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype.keys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLEdgeDatatype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/GraphMLEdgeDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLGraph", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.GraphMLGraph#<init>", "error" : "unsupported entity"}, {"label" : "keys", "tail" : ": Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.GraphMLGraph.keys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLGraph.id", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#id:Option[String]", "kind" : "val"}, {"label" : "meta", "tail" : ": M", "member" : "com.flowtick.graphs.graphml.GraphMLGraph.meta", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#meta:M", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/GraphMLGraph.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLKey", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.GraphMLKey#<init>", "error" : "unsupported entity"}, {"label" : "graphsType", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLKey.graphsType", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#graphsType:Option[String]", "kind" : "val"}, {"label" : "yfilesType", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLKey.yfilesType", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#yfilesType:Option[String]", "kind" : "val"}, {"label" : "targetHint", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLKey.targetHint", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#targetHint:Option[String]", "kind" : "val"}, {"label" : "typeHint", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLKey.typeHint", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#typeHint:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLKey.name", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#name:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "com.flowtick.graphs.graphml.GraphMLKey.id", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/GraphMLKey.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLMetaDatatype", "shortDescription" : "", "members_class" : [{"label" : "serialize", "tail" : "(graph: GraphMLGraph[M]): NodeSeq", "member" : "com.flowtick.graphs.graphml.GraphMLMetaDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#serialize(graph:com.flowtick.graphs.graphml.GraphMLGraph[M]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLGraph[M]]", "member" : "com.flowtick.graphs.graphml.GraphMLMetaDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLGraph[M]]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLMetaDatatype#<init>", "error" : "unsupported entity"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/GraphMLMetaDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLNode", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.GraphMLNode#<init>", "error" : "unsupported entity"}, {"label" : "geometry", "tail" : ": Option[Geometry]", "member" : "com.flowtick.graphs.graphml.GraphMLNode.geometry", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#geometry:Option[com.flowtick.graphs.layout.Geometry]", "kind" : "val"}, {"label" : "shape", "tail" : ": Option[ShapeDefinition]", "member" : "com.flowtick.graphs.graphml.GraphMLNode.shape", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#shape:Option[com.flowtick.graphs.layout.ShapeDefinition]", "kind" : "val"}, {"label" : "properties", "tail" : ": Seq[GraphMLProperty]", "member" : "com.flowtick.graphs.graphml.GraphMLNode.properties", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#properties:Seq[com.flowtick.graphs.graphml.GraphMLProperty]", "kind" : "val"}, {"label" : "label", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLNode.label", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#label:Option[String]", "kind" : "val"}, {"label" : "value", "tail" : ": N", "member" : "com.flowtick.graphs.graphml.GraphMLNode.value", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#value:N", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "com.flowtick.graphs.graphml.GraphMLNode.id", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/GraphMLNode.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html", "members_class" : [{"label" : "extractNodeLabel", "tail" : "(properties: Seq[GraphMLProperty], keys: Map[String, GraphMLKey]): Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype.extractNodeLabel", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#extractNodeLabel(properties:Seq[com.flowtick.graphs.graphml.GraphMLProperty],keys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):Option[String]", "kind" : "def"}, {"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLNode[T]]", "member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLNode[T]]", "kind" : "def"}, {"label" : "serialize", "tail" : "(node: GraphMLNode[T]): NodeSeq", "member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#serialize(node:com.flowtick.graphs.graphml.GraphMLNode[T]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype.keys", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "shapeXml", "tail" : "(label: Option[String], geometry: Option[Geometry], shape: Option[ShapeDefinition]): Elem", "member" : "com.flowtick.graphs.graphml.GraphMLNodeDatatype.shapeXml", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#shapeXml(label:Option[String],geometry:Option[com.flowtick.graphs.layout.Geometry],shape:Option[com.flowtick.graphs.layout.ShapeDefinition]):scala.xml.Elem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/GraphMLNodeDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLOps", "shortDescription" : "", "members_class" : [{"label" : "xml", "tail" : "(graphMLDatatype: Datatype[GraphMLGraphType[V, N, M]]): NodeSeq", "member" : "com.flowtick.graphs.graphml.GraphMLOps.xml", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#xml(implicitgraphMLDatatype:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.package.GraphMLGraphType[V,N,M]]):scala.xml.NodeSeq", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.GraphMLOps#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/package$$GraphMLOps.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.GraphMLProperty", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.GraphMLProperty#<init>", "error" : "unsupported entity"}, {"label" : "typeHint", "tail" : ": Option[String]", "member" : "com.flowtick.graphs.graphml.GraphMLProperty.typeHint", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#typeHint:Option[String]", "kind" : "val"}, {"label" : "value", "tail" : ": Any", "member" : "com.flowtick.graphs.graphml.GraphMLProperty.value", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#value:Any", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.flowtick.graphs.graphml.GraphMLProperty.key", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/GraphMLProperty.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.Serializer", "trait" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html", "kind" : "trait", "members_trait" : [{"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.Serializer.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "serialize", "tail" : "(value: T): NodeSeq", "member" : "com.flowtick.graphs.graphml.Serializer.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$Serializer.html#serialize(value:T):scala.xml.NodeSeq", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.flowtick.graphs.graphml.ToGraphML", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html", "members_object" : [{"label" : "apply", "tail" : "(graph: Graph[GraphMLGraph[M], GraphMLEdge[E], GraphMLNode[N]])(graphMLDatatype: Datatype[GraphMLGraphType[M, E, N]]): NodeSeq", "member" : "com.flowtick.graphs.graphml.ToGraphML.apply", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#apply[M,E,N](graph:com.flowtick.graphs.Graph[com.flowtick.graphs.graphml.GraphMLGraph[M],com.flowtick.graphs.graphml.GraphMLEdge[E],com.flowtick.graphs.graphml.GraphMLNode[N]])(implicitgraphMLDatatype:com.flowtick.graphs.graphml.package.Datatype[com.flowtick.graphs.graphml.package.GraphMLGraphType[M,E,N]]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$ToGraphML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.graphml.ValueWithProperties", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.ValueWithProperties#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": Seq[GraphMLProperty]", "member" : "com.flowtick.graphs.graphml.ValueWithProperties.properties", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#properties:Seq[com.flowtick.graphs.graphml.GraphMLProperty]", "kind" : "val"}, {"label" : "value", "tail" : ": T", "member" : "com.flowtick.graphs.graphml.ValueWithProperties.value", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#value:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/package$$ValueWithProperties.html", "kind" : "case class"}, {"name" : "com.flowtick.graphs.graphml.WrappedEdgeDatatype", "shortDescription" : "", "members_class" : [{"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLEdge[T]]", "member" : "com.flowtick.graphs.graphml.WrappedEdgeDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLEdge[T]]", "kind" : "def"}, {"label" : "serialize", "tail" : "(value: GraphMLEdge[T]): NodeSeq", "member" : "com.flowtick.graphs.graphml.WrappedEdgeDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#serialize(value:com.flowtick.graphs.graphml.GraphMLEdge[T]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.WrappedEdgeDatatype.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.WrappedEdgeDatatype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/package$$WrappedEdgeDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.WrappedNodeDatatype", "shortDescription" : "", "members_class" : [{"label" : "deserialize", "tail" : "(from: NodeSeq, graphKeys: Map[String, GraphMLKey]): ValidatedNel[Throwable, GraphMLNode[T]]", "member" : "com.flowtick.graphs.graphml.WrappedNodeDatatype.deserialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#deserialize(from:scala.xml.NodeSeq,graphKeys:scala.collection.Map[String,com.flowtick.graphs.graphml.GraphMLKey]):cats.data.ValidatedNel[Throwable,com.flowtick.graphs.graphml.GraphMLNode[T]]", "kind" : "def"}, {"label" : "serialize", "tail" : "(node: GraphMLNode[T]): NodeSeq", "member" : "com.flowtick.graphs.graphml.WrappedNodeDatatype.serialize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#serialize(node:com.flowtick.graphs.graphml.GraphMLNode[T]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "keys", "tail" : "(): Seq[GraphMLKey]", "member" : "com.flowtick.graphs.graphml.WrappedNodeDatatype.keys", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#keys:Seq[com.flowtick.graphs.graphml.GraphMLKey]", "kind" : "def"}, {"member" : "com.flowtick.graphs.graphml.WrappedNodeDatatype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/graphml\/package$$WrappedNodeDatatype.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.graphml.WrappedValue", "shortDescription" : "", "members_case class" : [{"member" : "com.flowtick.graphs.graphml.WrappedValue#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": T", "member" : "com.flowtick.graphs.graphml.WrappedValue.value", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#value:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/flowtick\/graphs\/graphml\/package$$WrappedValue.html", "kind" : "case class"}], "com.flowtick.graphs.defaults" : [{"name" : "com.flowtick.graphs.defaults.DefaultEdgeBuilder", "shortDescription" : "", "members_class" : [{"label" : "-->", "tail" : "(to: N): Edge[Unit, N]", "member" : "com.flowtick.graphs.defaults.DefaultEdgeBuilder.-->", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#-->(to:N):com.flowtick.graphs.Edge[Unit,N]", "kind" : "def"}, {"label" : "-->", "tail" : "(value: E, to: N): Edge[E, N]", "member" : "com.flowtick.graphs.defaults.DefaultEdgeBuilder.-->", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#-->[E](value:E,to:N):com.flowtick.graphs.Edge[E,N]", "kind" : "def"}, {"member" : "com.flowtick.graphs.defaults.DefaultEdgeBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/flowtick\/graphs\/defaults\/package$$DefaultEdgeBuilder.html", "kind" : "class"}, {"name" : "com.flowtick.graphs.defaults.id", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/defaults\/package$$id$.html", "members_object" : [{"label" : "string", "tail" : "(): Identifiable[N, String]", "member" : "com.flowtick.graphs.defaults.id.string", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#string[N]:com.flowtick.graphs.Identifiable[N,String]", "kind" : "implicit def"}, {"label" : "long", "tail" : "(): Identifiable[N, Long]", "member" : "com.flowtick.graphs.defaults.id.long", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#long[N]:com.flowtick.graphs.Identifiable[N,Long]", "kind" : "implicit def"}, {"label" : "int", "tail" : "(): Identifiable[N, Int]", "member" : "com.flowtick.graphs.defaults.id.int", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#int[N]:com.flowtick.graphs.Identifiable[N,Int]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$id$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.flowtick.graphs.defaults.label", "shortDescription" : "", "object" : "com\/flowtick\/graphs\/defaults\/package$$label$.html", "members_object" : [{"label" : "edgeStringOptLabel", "tail" : "(edgeLabel: Labeled[Edge[E, N], String]): Labeled[Edge[E, N], Option[String]]", "member" : "com.flowtick.graphs.defaults.label.edgeStringOptLabel", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#edgeStringOptLabel[E,N](implicitedgeLabel:com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],String]):com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],Option[String]]", "kind" : "implicit def"}, {"label" : "stringOptLabel", "tail" : ": Labeled[String, Option[String]]", "member" : "com.flowtick.graphs.defaults.label.stringOptLabel", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#stringOptLabel:com.flowtick.graphs.Labeled[String,Option[String]]", "kind" : "implicit val"}, {"label" : "labeledEdgeString", "tail" : "(labeled: Labeled[E, String]): Labeled[Edge[E, N], String]", "member" : "com.flowtick.graphs.defaults.label.labeledEdgeString", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#labeledEdgeString[E,N](implicitlabeled:com.flowtick.graphs.Labeled[E,String]):com.flowtick.graphs.Labeled[com.flowtick.graphs.Edge[E,N],String]", "kind" : "implicit def"}, {"label" : "intLabel", "tail" : ": Labeled[Int, String]", "member" : "com.flowtick.graphs.defaults.label.intLabel", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#intLabel:com.flowtick.graphs.Labeled[Int,String]", "kind" : "implicit val"}, {"label" : "intOptLabel", "tail" : ": Labeled[Int, Option[String]]", "member" : "com.flowtick.graphs.defaults.label.intOptLabel", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#intOptLabel:com.flowtick.graphs.Labeled[Int,Option[String]]", "kind" : "implicit val"}, {"label" : "unitLabel", "tail" : ": Labeled[Unit, String]", "member" : "com.flowtick.graphs.defaults.label.unitLabel", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#unitLabel:com.flowtick.graphs.Labeled[Unit,String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/flowtick\/graphs\/defaults\/package$$label$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};